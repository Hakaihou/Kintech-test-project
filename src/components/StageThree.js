import React from 'react';
import Players from "./Players";

export default function StageOne(props) {
    const arr = props.players
        .sort((a, b) => b.RP - a.RP)
        .map((player, index) => (
            <Players
                key={player.id}
                name={player.username}
                points={player.RP}
                index={index + 1}
            />
        ));

    return (
        <React.Fragment>
            <section className="stage-two stage-three">
                <div className="promo-card">
                    <div className="flex-container">
                        <div className="img-container">
                            <img src={props.logo} alt=""/>
                            <img className="red-bg" style={{ top: `${100 - props.fill}%` }} src={props.redBg} alt=""/>
                            <img className="light-black-bg" src={props.lightBlackBg} alt=""/>
                        </div>
                        <h2>Compenigma August 2020</h2>
                    </div>
                    <div className="flex-container">
                        <svg onMouseEnter={() => props.popUpHandle(true)} onMouseLeave={() => props.popUpHandle(false)}
                             width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M7 0.5C3.1552 0.5 0 3.6552 0 7.5C0 11.3448 3.1552 14.5 7 14.5C10.8448 14.5 14 11.3448 14 7.5C14 3.6552 10.8448 0.5 7 0.5ZM7 12.4219C6.54694 12.4219 6.17969 12.0546 6.17969 11.6016C6.17969 11.1485 6.54694 10.7812 7 10.7812C7.45306 10.7812 7.82031 11.1485 7.82031 11.6016C7.82031 12.0546 7.45306 12.4219 7 12.4219ZM8.45357 7.02416C8.21726 7.19799 7.82031 7.56891 7.82031 8.10441V8.32031C7.82031 8.77332 7.453 9.14062 7 9.14062C6.547 9.14062 6.17969 8.77332 6.17969 8.32031V8.10441C6.17969 7.18516 6.65473 6.30918 7.48305 5.70155C7.69735 5.54416 7.82031 5.30301 7.82031 5.03906C7.82031 4.58685 7.45221 4.21875 7 4.21875C6.54779 4.21875 6.17969 4.58685 6.17969 5.03906C6.17969 5.49207 5.81238 5.85938 5.35938 5.85938C4.90637 5.85938 4.53906 5.49207 4.53906 5.03906C4.53906 3.68202 5.64296 2.57812 7 2.57812C8.35704 2.57812 9.46094 3.68202 9.46094 5.03906C9.46094 5.81932 9.08441 6.56154 8.45357 7.02416Z"
                                fill="#FE9400"/>
                        </svg>
                        {props.popUp && <div className="popup-message">
                            Зарабатывайте очки и получите шанс выиграть уникальные призы!
                            <div className="popup-corner"></div>
                        </div>}
                        <svg onClick={props.hiddenHandle} className={`arrow ${!props.isHidden ? 'rotate' : ''}`}
                             width="7"
                             height="5" viewBox="0 0 7 5" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M6.71098 1.86173L4.18608 4.68155C3.80588 5.10615 3.19172 5.10615 2.81152 4.68155L0.286622 1.86173C-0.327542 1.17583 0.111146 0 0.978775 0L6.02857 0C6.8962 0 7.32514 1.17583 6.71098 1.86173Z"
                                fill="#979797"/>
                        </svg>
                    </div>
                </div>
                <div className="promo-card-footer">
                    <p>Победители уже почти определены!</p>
                    <span>Мы ждём результатов по последним 4 вопросам</span>
                </div>
                {
                    !props.isHidden &&
                    <React.Fragment>
                        <div className="score-board">
                            <div className="grid-container score-header">
                                <p>№</p>
                                <p>Username</p>
                                <p>RP</p>
                            </div>
                            {arr}
                        </div>
                        <div className="promo-hidden">
                            <div className="flex-container">
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd"
                                          d="M6.44452 8.77792H1.77779C1.35 8.77792 1 8.42792 1 8.00013V1.77779C1 1.35001 1.35 1 1.77779 1H6.44452C6.8723 1 7.22231 1.35001 7.22231 1.77779V8.00013C7.22231 8.42792 6.8723 8.77792 6.44452 8.77792ZM6.44452 15.0002H1.77779C1.35 15.0002 1 14.6502 1 14.2224V11.1112C1 10.6834 1.35 10.3334 1.77779 10.3334H6.44452C6.8723 10.3334 7.22231 10.6834 7.22231 11.1112V14.2224C7.22231 14.6502 6.8723 15.0002 6.44452 15.0002ZM9.55532 15.0005H14.222C14.6498 15.0005 14.9998 14.6505 14.9998 14.2228V8.00036C14.9998 7.57257 14.6498 7.22256 14.222 7.22256H9.55532C9.12753 7.22256 8.77753 7.57257 8.77753 8.00036V14.2228C8.77753 14.6505 9.12753 15.0005 9.55532 15.0005ZM8.77753 4.88901V1.7778C8.77753 1.35001 9.12753 1 9.55532 1H14.222C14.6498 1 14.9998 1.35001 14.9998 1.7778V4.88901C14.9998 5.3168 14.6498 5.66681 14.222 5.66681H9.55532C9.12753 5.66681 8.77753 5.3168 8.77753 4.88901Z"
                                          fill="#FE9400"/>
                                </svg>
                                <span>Таблица предсказаний</span>
                            </div>
                            <div className="flex-container">
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd"
                                          d="M8 15C8.9625 15 9.75 14.2125 9.75 13.25V2.75C9.75 1.7875 8.9625 1 8 1C7.0375 1 6.25 1.7875 6.25 2.75V13.25C6.25 14.2125 7.0375 15 8 15ZM2.75 14.9998C3.7125 14.9998 4.5 14.2124 4.5 13.2499V9.74994C4.5 8.78746 3.7125 7.99997 2.75 7.99997C1.7875 7.99997 1 8.78746 1 9.74994V13.2499C1 14.2124 1.7875 14.9998 2.75 14.9998ZM11.5 13.2499V7.12491C11.5 6.16241 12.2875 5.37491 13.25 5.37491C14.2125 5.37491 15 6.16241 15 7.12491V13.2499C15 14.2124 14.2125 14.9999 13.25 14.9999C12.2875 14.9999 11.5 14.2124 11.5 13.2499Z"
                                          fill="#FE9400"/>
                                </svg>
                                <span>Мои предсказания (0)</span>
                            </div>
                            <div className="flex-container">
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd"
                                          d="M8.728 1.5098L9.4 2.85319H14.0667C14.58 2.85319 15 3.27011 15 3.77967V10.1912C15 10.7008 14.58 11.1177 14.0667 11.1177H9.036C8.69067 11.1177 8.364 10.9231 8.20533 10.6081L7.53333 9.26473H2.86667V14.0738C2.86667 14.5833 2.44667 15.0002 1.93333 15.0002C1.42 15.0002 1 14.5833 1 14.0738V1.92672C1 1.41716 1.42 1.00024 1.93333 1.00024H7.888C8.24267 1.00024 8.56933 1.1948 8.728 1.5098ZM9.40052 9.26423H13.1339V4.50041H8.46719L7.53385 2.64748H2.86719V7.41131H8.46719L9.40052 9.26423Z"
                                          fill="#FE9400"/>
                                </svg>
                                <span>Таблица лидеров</span>
                            </div>
                            <div className="special-container">
                                <div className="container">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M7.30273 5.94922C6.17193 5.94922 5.25195 6.8692 5.25195 8C5.25195 9.1308 6.17193 10.0508 7.30273 10.0508C8.43354 10.0508 9.35352 9.1308 9.35352 8C9.35352 6.8692 8.43354 5.94922 7.30273 5.94922Z"
                                            fill="#FE9400"/>
                                        <path
                                            d="M11.2676 1C10.3629 1 9.62695 1.73598 9.62695 2.64062C9.62695 3.54527 10.3629 4.28125 11.2676 4.28125C12.1722 4.28125 12.9082 3.54527 12.9082 2.64062C12.9082 1.73598 12.1722 1 11.2676 1Z"
                                            fill="#FE9400"/>
                                        <path
                                            d="M3.88477 1C2.67858 1 1.69727 1.98131 1.69727 3.1875C1.69727 4.39369 2.67858 5.375 3.88477 5.375C5.09095 5.375 6.07227 4.39369 6.07227 3.1875C6.07227 1.98131 5.09095 1 3.88477 1Z"
                                            fill="#FE9400"/>
                                        <path
                                            d="M12.1152 9.23047C10.909 9.23047 9.92773 10.2118 9.92773 11.418C9.92773 12.6242 10.909 13.6055 12.1152 13.6055C13.3214 13.6055 14.3027 12.6242 14.3027 11.418C14.3027 10.2118 13.3214 9.23047 12.1152 9.23047Z"
                                            fill="#FE9400"/>
                                        <path
                                            d="M3.33789 11.7188C2.43325 11.7188 1.69727 12.4547 1.69727 13.3594C1.69727 14.264 2.43325 15 3.33789 15C4.24253 15 4.97852 14.264 4.97852 13.3594C4.97852 12.4547 4.24253 11.7188 3.33789 11.7188Z"
                                            fill="#FE9400"/>
                                    </svg>
                                    <span>Распылить</span>
                                </div>
                                <svg onMouseEnter={() => props.popUpHandle2(true)}
                                     onMouseLeave={() => props.popUpHandle2(false)} className="popup" width="16"
                                     height="16"
                                     viewBox="0 0 16 16" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path
                                        d="M8 1C4.1552 1 1 4.1552 1 8C1 11.8448 4.1552 15 8 15C11.8448 15 15 11.8448 15 8C15 4.1552 11.8448 1 8 1ZM8 12.9219C7.54694 12.9219 7.17969 12.5546 7.17969 12.1016C7.17969 11.6485 7.54694 11.2812 8 11.2812C8.45306 11.2812 8.82031 11.6485 8.82031 12.1016C8.82031 12.5546 8.45306 12.9219 8 12.9219ZM9.45357 7.52416C9.21726 7.69799 8.82031 8.06891 8.82031 8.60441V8.82031C8.82031 9.27332 8.453 9.64062 8 9.64062C7.547 9.64062 7.17969 9.27332 7.17969 8.82031V8.60441C7.17969 7.68516 7.65473 6.80918 8.48305 6.20155C8.69735 6.04416 8.82031 5.80301 8.82031 5.53906C8.82031 5.08685 8.45221 4.71875 8 4.71875C7.54779 4.71875 7.17969 5.08685 7.17969 5.53906C7.17969 5.99207 6.81238 6.35938 6.35938 6.35938C5.90637 6.35938 5.53906 5.99207 5.53906 5.53906C5.53906 4.18202 6.64296 3.07812 8 3.07812C9.35704 3.07812 10.4609 4.18202 10.4609 5.53906C10.4609 6.31932 10.0844 7.06154 9.45357 7.52416Z"
                                        fill="#FE9400"/>
                                </svg>
                                {props.popUp2 && <div className="popup-message">
                                    Распылить ваши очки, чтобы получить награду
                                    <div className="popup-corner"></div>
                                </div>}
                            </div>
                        </div>
                    </React.Fragment>
                }
            </section>
        </React.Fragment>
    )
}